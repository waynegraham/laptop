#!/bin/bash

# Welcome to the CLIR/DLF laptop script.

green=$(tput setaf 2)
normal=$(tput sgr0)

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "${green}\\n$fmt\\n${normal}" "$@"
}

append_to_zprofile() {
  local text="$1"
  
  local file="$HOME/.zprofile"

  if ! grep -Fqs "$text" "$file"; then
    fancy_echo "Appending '$text' to $file"
    echo "$text" >> "$file"
  fi
}

append_to_zshrc() {
  local text="$1" zshrc
  local skip_new_line="${2:-0}"

  if [ -w "$HOME/.zshrc.local" ]; then
    zshrc="$HOME/.zshrc.local"
  else
    zshrc="$HOME/.zshrc"
  fi

  if ! grep -Fqs "$text" "$zshrc"; then
    if [ "$skip_new_line" -eq 1 ]; then
      printf "%s\\n" "$text" >> "$zshrc"
    else
      printf "\\n%s\\n" "$text" >> "$zshrc"
    fi
  fi
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ ! -f "$HOME/.zshrc" ]; then
  touch "$HOME/.zshrc"
fi

# shellcheck disable=SC2016
append_to_zshrc 'export PATH="$HOME/.bin:$PATH"'

HOMEBREW_PREFIX="/opt/local"

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" /opt/local
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."
    /bin/bash -c \
      "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    append_to_zshrc '# recommended by brew doctor'

    # shellcheck disable=SC2016
    append_to_zshrc 'export PATH="/opt/local/bin:$PATH"' 1
    append_to_zprofile 'eval "$(/opt/homebrew/bin/brew shellenv)"'

    export PATH="/opt/local/bin:$PATH"
    source ~/.zshrc
    source ~/.zprofile
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

fancy_echo "Installing Rosetta..."
softwareupdate --install-rosetta --agree-to-license

if brew list | grep -Fq brew-cask; then
  fancy_echo "Uninstalling old Homebrew-Cask ..."
  brew uninstall --force brew-cask
fi

fancy_echo "Updating Homebrew formulae ..."
brew update --force # https://github.com/Homebrew/brew/issues/1151

brew bundle --file=- <<EOF
# Unix
brew "asimov"
brew "gpg"
brew "ack"
brew "curl"
brew "git"
brew "openssl"
brew "the_silver_searcher"
brew "vim"
brew "zsh"

# Applications
cask "asana"
cask "box-drive"
cask "box-tools"
cask "clipy"
cask "adobe-creative-cloud"
cask "firefox"
cask "google-chrome"
cask "iterm2"
cask "1password"
cask "libreoffice"
cask "microsoft-office"
cask "slack"
cask "visual-studio-code"
cask "zoom"
EOF

# Configure Ruby
fancy_echo "Configuring Bundler..."
number_of_cores=$(sysctl -n hw.ncpu)
bundle config --global jobs $((number_of_cores - 1))

fancy_echo "Installing oh my zsh"
sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended

if [ -f "$HOME/.laptop.local" ]; then
  fancy_echo "Running your customizations from ~/.laptop.local ..."
  # shellcheck disable=SC1090
  . "$HOME/.laptop.local"
fi
